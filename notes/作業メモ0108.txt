ドキュメントを開く
    ＞ブラウザを開く

ブラウザ上の操作は
    開く＞ドキュメントを読み込む（編集禁止）
    参照＞ドキュメントを参照エリアへ読み込む
    開いてチェックイン   　＜不用　自動処理
    開いて再活性化         ＜不用　自動処理

閉じる
    ＞エントリをディアクティベートして編集エリアをクリア（ドキュメント編集中）
    ＞それ以外は、単純に編集エリアのクリア

保存（PUSH)
     ＞サーバにエントリを送出？☓　編集中のデータをサーバに送出
     
上のメニューは廃棄

以下のメニューに統一

ドキュメントを選ぶ   (open)
______
作業開始    checkin   

作業保存    pushdata    (save)
作業終了    checkout    
作業保留    deactivate  
作業再開    activate    
作業破棄

新規カット   post newSheet

作業検収    receipt
作業終了（強制）    checkout/force
作業中断    abort

ライン分岐   branch
ラインマージ  merge
______
クリア     clear editArea  (clear)
______
以下テスト用メンテナンス機能

push Entry


本線
    絵コンテチップ
    レイアウト
    原画
    動画
    色指定
    スキャン
    ペイント
    セル特効
    　↓
    <アセットストア>

背景美術
    (絵コンテチップ)
    (レイアウト)
    美術原図整理
    背景作画
    美術監督検査
    　↓
    <アセットストア>

コンポジット
    <アセットストア>
    　↓
    コンポジット
    　↓
    <アセットストア>

3D-Animation<完全ポスプロ系>
    <アセットストア>
      ↓
    ３D-CGIAnimation
      ↓
    <アセットストア>

*現在この形式は、ほぼ利用されない
大昔の型式

3D作業アセット
    モデル
        キャラクターモデル
        プロップモデル
    リギング
    マテリアル
    アニメーション
    カメラワーク
    ライティング
    VFX   
    
    
ACTF ブース出展
UATimesheet Service
ネットワーク上でアニメーションタイムシートの入出力サービスを提供します。

タイムシートをWebブラウザまたは　AdobePhotoshop　AdobeAfterEffect上のプラグインから入力・参照することが可能です。

作業中のデータは、ロックされて別のユーザが編集することはできません。

すべてのユーザが最新の同じタイムシートを参照することが可能です。

ルックは、基本的にタイムシートと同じ　使い手が迷うことは殆どありません（ちょっとウソ）


テスト

    大量カットの処理試験　サンプル作成UI
    リストのレスポンス改善

    diff リファレンスと編集エリアのdiff機能を早急に実装

ACTFとは別に、説明会を開く？
ACTFで説明会の参加希望者を募り、説明会を開催する（事前でも良いかも）

ローカルファイルのインポート時にドキュメント情報を上書きしないように１クッション置く
特にAIR

バックエンドのリスト

作業開始の際に現状のデータを参照へ移行する


カット.name
エピソード.name
タイトル.name
ユーザ用の識別情報となるので、変更・重複不可に設定されたし

Identifierパーサを作ってドキュメントの解釈を行う
listEntryと統合するのが望ましい

ダイアログ類のリソースを抽出してリストアップ
マスターのmessagesと統合

NetworkRepository.getStatusメソッドを修正して
サーバに最新のステータスを要求するように改変する
サーバの応答がない場合だけdocumentDepot内のデータを参照する？

サーバに実装が必要な機能
    エントリのステータス変更要求
        現在
        PUT{
            cut_token:TOKEN,
            name:NAME,
            description:IDENTIFIER
        }
        で行っている
        ステータスとその他の条件を添えたほうが良いか
    
        これを
        PUT{
            cut_token:TOKEN,
            action:{name:ACTION,property:PROP}
            name:NAME,
            description:IDENTOFIER
        }
こんな感じにできるか？

         現在のままの場合は以下の更新条件が発生する
カレントステータス　変更要求　条件       結果    詳細
        Startup     Active      *        fail    
                            　<check-in> success 新規ジョブ名称を伴うチェックイン手続を起こった場合のみ成功
                    Hold        *        fail    
                    Fixed       *        fail

        Active      Startup     *        fail
                    Hold        owner    success
                                other    fail
                    Fixed       owner    success
                                other    fail

        Hold        Satrtup     *        fail
                    Active      owner    success
                                other    fail
                    Fixed       *        fail
        Fixed       Startup     *        fail
                    Active      owner    success
                                other    fail
                            　<check-in> success 新規ジョブ名称を伴うチェックイン手続を起こった場合のみ成功
                    Hold        *        fail    
        Aborted     *           * 
        
        
        サーバからの読出時に以下の条件で自動モード変更
        自分自身の Active/Hold データなら、自動Activate
        Fix の場合は、動作が2種あるのでNOP
        Startup Abortedは、当然NOP
        
        クッキーにオンライン情報を追加
        
        job checkinの際に「現データをリファレンスへ流し込んで」からチェックイン

サーバの各アイテムの編集画面に以下のリンク／表示を追加
    作品（タイトル）

        ラインリスト
        ライン編集

        工程リスト
        工程編集

        ジョブリスト
        ジョブ編集
        
パーミッション　を「ユーザ」又は　「共有」に　？


ねこまたや　LRWM list/read/write/manage

権限を
    読込／書込み/管理　の３態に　
    
    リスト
データの「リスト」が可能
アカウント（共有）があってすべての権利がない場合はこの権利が自動的にあることにすれば、この権利は不用？


    読込
データ内容を読み出すことが可能（編集権利は別）
＞読出可能
    書込
データを編集することができる
＞チェックインが可能
    管理
データの管理情報を編集することができる
＞管理モードへの移行が可能

プレフィックスの扱いを調整